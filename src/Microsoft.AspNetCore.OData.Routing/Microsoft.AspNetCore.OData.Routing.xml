<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.OData.Routing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController">
            <summary>
            Represents a controller for generating OData servicedoc and metadata document ($metadata).
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController.GetMetadata">
            <summary>
            Generates the OData $metadata document.
            </summary>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> representing $metadata.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController.GetServiceDocument">
            <summary>
            Generates the OData service document.
            </summary>
            <returns>The service document for the service.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            Post ~/entity|singleton/action,  ~/entity|singleton/cast/action
            Post ~/entity|singleton/key/action,  ~/entity|singleton/key/cast/action
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.IsOperationParameterMeet(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention">
            <summary>
            The convention for an odata template string.
            It looks for the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute"/> on controller and <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute"/> on action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention},Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention"/> class.
            </summary>
            <param name="logger">The registered logger.</param>
            <param name="parser">The registered parser.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.GetODataRoutePrefixes(System.String,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Gets the route prefix on the controller.
            </summary>
            <param name="modelName">The model name.</param>
            <param name="controller">The controller.</param>
            <returns>The prefix string list.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> with key.
            It supports key in parenthesis and key as segment if it's a single key.
            Conventions:
            GET ~/entityset/key
            GET ~/entityset/key/cast
            PUT ~/entityset/key
            PUT ~/entityset/key/cast
            PATCH ~/entityset/key
            PATCH ~/entityset/key/cast
            DELETE ~/entityset/key
            DELETE ~/entityset/key/cast
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>.
            Conventions:
            GET ~/entityset
            GET ~/entityset/$count
            GET ~/entityset/cast
            GET ~/entityset/cast/$count
            POST ~/entityset
            POST ~/entityset/cast
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            Get ~/entity|singleton/function,  ~/entity|singleton/cast/function
            Get ~/entity|singleton/key/function, ~/entity|singleton/key/cast/function
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.IsOperationParameterMeet(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention">
            <summary>
            The interface for all OData convention routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order">
            <summary>
            Gets the order value for determining the order of execution of conventions.
            Conventions execute in ascending numeric value of the <see cref="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order"/> property.
            </summary>
            <para>
            If two conventions have the same numeric value of <see cref="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order"/>, then their relative execution order
            is undefined.
            </para>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <summary>
            Applies the convention on controller
            </summary>
            <param name="context">The controller action context.</param>
            <returns>
            True: applies the convention on the actions of this controller.
            False: no, please skip this convention on the actions of this controller.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <summary>
            Applies the convention on action of this controller.
            </summary>
            <param name="context">The controller action context.</param>
            <returns>
            True: yes, applied the convention, please stop to execute the remaining conventions.
            False: no, please continue to execute the remaining conventions.
            </returns>
            <remarks>
            The OData action convention should not put limitation on the action parameters.
            That's, if an action has extra parameter that's not required for a certain convention,
            We consider this action is valid for this convention.
            For example, Entity convention requires the key(s) parameters, doesn't care about other parameters.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention">
            <summary>
            The convention for $metadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.Order">
            <summary>
            Gets the order value for determining the order of execution of conventions.
            Metadata routing convention has 0 order.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention">
            <summary>
            Conventions for <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            Action name convention should follow up: {HttpMethodName}{NavigationPropertyName}[From{DeclaringTypeName}]
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention})">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.SplitActionName(System.String,System.String@,System.String@)">
            <summary>
            split action using navigation action name convention.
            For example: PostToOrdersFromVipOrder
            => Method Name: PostTo
            => property : Orders
            => declaring: VipOrder
            </summary>
            <param name="actionName">The input action name.</param>
            <param name="property">The property name (out).</param>
            <param name="declaring">The declaring name (out).</param>
            <returns>The http method name or null.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext">
            <summary>
            A context object for <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext" /> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="controller">The controller model.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.OData.Edm.IEdmEntitySet)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext" /> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="controller">The controller model.</param>
            <param name="entitySet">The associated entity set for this controller.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel,Microsoft.OData.Edm.IEdmSingleton)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext" /> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="controller">The controller model.</param>
            <param name="singleton">The associated singleton for this controller.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Prefix">
            <summary>
            Gets the associated model name for this model, it's also used as the routing prefix.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.EntitySet">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> for this controller.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.EntityType">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Singleton">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/> for this controller.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Controller">
            <summary>
            Gets the related controller model in this context. This property should never be "null".
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Action">
            <summary>
            Gets the related action model in this context
            We guarentee that this property should never be "null" when calling "AppliesToAction"
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.RoutePrefixes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmOperationImport"/>.
            Get ~/functionimport(....)
            Post ~/actionimport
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention">
            <summary>
            Conventions for <see cref="T:Microsoft.OData.Edm.IEdmAction"/> and <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            Get ~/entity|singleton/function,  ~/entity|singleton/cast/function
            Get ~/entity|singleton/key/function, ~/entity|singleton/key/cast/function
            Post ~/entity|singleton/action,  ~/entity|singleton/cast/action
            Post ~/entity|singleton/key/action,  ~/entity|singleton/key/cast/action
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.ProcessOperations(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Process the operation candidates using the information.
            </summary>
            <param name="context"></param>
            <param name="entityType"></param>
            <param name="navigationSource"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.SplitActionName(System.String,System.String@,System.Boolean@)">
            <summary>
            Split the action based on supporting pattern.
            </summary>
            <param name="actionName">The input action name.</param>
            <param name="cast">The out of cast type name.</param>
            <param name="isOnCollection">The out of collection binding flag.</param>
            <returns>The operation name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.IsOperationParameterMeet(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Verify the parameter of the edm operation meets the parameter defined in action.
            </summary>
            <param name="operation">The Edm operation.</param>
            <param name="action">The action model.</param>
            <returns>true/false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AddSelector(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext,Microsoft.OData.Edm.IEdmOperation,System.Boolean,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Add the template to the action
            </summary>
            <param name="context">The context.</param>
            <param name="edmOperation">The Edm operation.</param>
            <param name="hasKeyParameter">Has key parameter or not.</param>
            <param name="entityType">The entity type.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="castType">The type cast.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention">
            <summary>
            The convention for the property access.
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/property
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/property
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/cast/property/
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/cast/property
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/property/cast
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/property/cast
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/cast/property/cast
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/cast/property/cast
            GET ~/entityset/key/property/$value
            GET ~/entityset/key/cast/property/$value
            GET ~/singleton/property/$value
            GET ~/singleton/cast/property/$value
            GET ~/entityset/key/property/$count
            GET ~/entityset/key/cast/property/$count
            GET ~/singleton/property/$count
            GET ~/singleton/cast/property/$count
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention"/> that handles entity reference manipulations.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/>.
            The Conventions:
            Get|Put|Patch ~/singleton
            Get|Put|Patch ~/singleton/cast
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions">
            <summary>
            The extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.IsNonODataAction(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Test whether the action is not suitable for OData action.
            </summary>
            <param name="action">The given action model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.HasParameter``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,System.String)">
            <summary>
            Test whether the action has the given parameter with the given type.
            </summary>
            <typeparam name="T">The parameter type.</typeparam>
            <param name="action">The given action model.</param>
            <param name="parameterName">The given parameter name.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.GetAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Gets the attribute on an action model.
            </summary>
            <typeparam name="T">The required attribute type.</typeparam>
            <param name="action">The given action model.</param>
            <returns>Null or the corresponing attribute.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.GetAttributes``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.HasODataKeyParameter(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Microsoft.OData.Edm.IEdmEntityType,System.String)">
            <summary>
            Test whether the action has the key parameters defined.
            </summary>
            <param name="action">The action model.</param>
            <param name="entityType">The Edm entity type.</param>
            <param name="keyPrefix">The key prefix for the actio parameter.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionModelExtensions.AddSelector(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate)">
            <summary>
            Adds the OData selector model to the action.
            </summary>
            <param name="action">The given action model.</param>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="path">The OData path template.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ControllerModelExtensions">
            <summary>
            The extension methods for the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ControllerModelExtensions.IsNonODataController(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Test whether the controller is not suitable for OData controller.
            </summary>
            <param name="controller">The given controller model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ControllerModelExtensions.HasAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Test whether the controller has the specified attribute defined
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="controller">The given controller model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ControllerModelExtensions.GetAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Gets the attribute from the controller model.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="controller">The given controller model.</param>
            <returns>The attribute or null.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ControllerModelExtensions.GetAttributes``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Edm.EdmModelExtensions.ResolveNavigationSource(Microsoft.OData.Edm.IEdmModel,System.String,System.Boolean)">
            <summary>
            Resolve the navigation source using the input identifier
            </summary>
            <param name="model">The Edm model.</param>
            <param name="identifier">The indentifier</param>
            <param name="enableCaseInsensitive">Enable case insensitive</param>
            <returns>Null or the found navigation source.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Edm.EdmModelExtensions.TryGetEntityType(Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmEntityType@)">
            <summary>
            Try to get the entity type <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> from the input <see cref="T:Microsoft.OData.Edm.IEdmType"/>
            </summary>
            <param name="edmType">The input Edm Type.</param>
            <param name="entityType">The output Entity Type.</param>
            <returns>True/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Edm.EdmModelExtensions.FindTypeInInheritance(Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Find the given type in a structured type inheritance, include itself.
            </summary>
            <param name="structuralType">The starting structural type.</param>
            <param name="model">The Edm model.</param>
            <param name="typeName">The searching type name.</param>
            <returns>The found type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata">
            <summary>
            Defines a contract use to specify the OData routing related metadata in <see cref="P:Microsoft.AspNetCore.Http.Endpoint.Metadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Prefix">
            <summary>
            Gets the prefix string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Template">
            <summary>
            Gets the OData path template
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.NonODataActionAttribute">
            <summary>
            Indicates that a controller method is not an OData action method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.NonODataControllerAttribute">
            <summary>
            Indicates that a controller is not an OData controller.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute">
            <summary>
            The attribute to specify a controller to an Edm model using the model name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute"/> class.
            </summary>
            <param name="model">The specified model name.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataModelAttribute.Model">
            <summary>
            Gets the specified model name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod">
            <summary>
            An enumeration for request methods.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.None">
            <summary>
            An unknown method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.Get">
            <summary>
            "Get"
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.Post">
            <summary>
            "Post"
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.Put">
            <summary>
            "Put"
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.Patch">
            <summary>
            "Patch"
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataRequestMethod.Delete">
            <summary>
            "Delete"
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute">
            <summary>
            Represents an attribute that can be placed on an action of an Controller to specify
            the OData URLs that the action handles.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute"/> class.
            </summary>
            <param name="pathTemplate">The OData URL path template that this action handles.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute.PathTemplate">
            <summary>
            Gets the OData URL path template that this action handles.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteAttribute.ModelName">
            <summary>
            Gets or sets the OData route with which to associate the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute">
            <summary>
            Represents an attribute that can be placed on an OData controller to specify
            the prefix that will be used for all actions of that controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute"/> class.
            </summary>
            <param name="routePrefix">The OData URL path template that this action handles.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute.RoutePrefix">
            <summary>
            Gets the OData URL path template that this action handles.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutePrefixAttribute.ModelName">
            <summary>
            Gets or sets the model name with which to associate the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelDebugProvider">
            <summary>
            Use for debug  for OData convention action discovery on <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider">
            <summary>
            Builds or modifies <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel" /> for OData convention action discovery.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider" /> class.
            </summary>
            <param name="conventions">The registered OData routing conventions.</param>
            <param name="options">The registered OData routing options.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.Order">
            <summary>
            Gets the order value for determining the order of execution of providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the second pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> built.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the first pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> building.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy">
            <summary>
            Defines a policy that applies behaviors to the OData Uri matcher.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.Order">
            <summary>
            Gets a value that determines the order of this policy.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.AppliesToEndpoints(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})">
            <summary>
            Returns a value that indicates whether the matcher applies to any endpoint in endpoints.
            </summary>
            <param name="endpoints">The set of candidate values.</param>
            <returns>true if the policy applies to any endpoint in endpoints, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.ApplyAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.Matching.CandidateSet)">
            <summary>
            Applies the policy to the CandidateSet.
            </summary>
            <param name="httpContext">The context associated with the current request.</param>
            <param name="candidates">The CandidateSet.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata">
            <summary>
            Represents OData Endpoint metadata used during routing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata"/> class.
            </summary>
            <param name="prefix">The prefix string.</param>
            <param name="model">The Edm model.</param>
            <param name="template">The Routing path template.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata"/> class.
            </summary>
            <param name="prefix">The prefix string.</param>
            <param name="model">The Edm model.</param>
            <param name="template">The Routing path template.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Prefix">
            <summary>
            Gets the prefix string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.StrTemplate">
            <summary>
            Gets the template string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Template">
            <summary>
            Gets the OData path template
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.GenerateODataPath(Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <summary>
            Generate the real <see cref="T:Microsoft.OData.UriParser.ODataPath"/> based on the template the route values.
            </summary>
            <param name="values">The route values.</param>
            <param name="queryString">The query string.</param>
            <returns>The built <see cref="T:Microsoft.OData.UriParser.ODataPath" />.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptionsBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions.EnableAttributeRouting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions.Models">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions.AddModel(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions.AddModel(System.String,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions.AddODataRouting(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions.AddODataRouting(Microsoft.AspNetCore.OData.Abstracts.IODataBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions.AddODataRouting(Microsoft.AspNetCore.OData.Abstracts.IODataBuilder,System.Action{Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions})">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions.AddODataRouting(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.OData.Routing.ODataRoutingOptions})">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingServiceCollectionExtensions.AddConvention``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.Parse(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Parse the string like "/users/{id}/contactFolders/{contactFolderId}/contacts"
            to segments
            </summary>
            <param name="model">the Edm model.</param>
            <param name="odataPath">the setting.</param>
            <returns>Null or <see cref="T:System.UriParser"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.CreateFirstSegment(System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Process the first segment in the request uri.
            The first segment could be only singleton/entityset/operationimport, doesn't consider the $metadata, $batch
            </summary>
            <param name="identifier">the whole identifier of this segment</param>
            <param name="model">The Edm model.</param>
            <param name="path">The out put of the path, because it may include the key segment.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.CreateNextSegment(System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Create the next segment for the request uri.
            </summary>
            <param name="identifier">The request segment uri literal</param>
            <param name="model">The Edm model.</param>
            <param name="path">The out of the path</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindNavigationSource(System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind the idenfier as navigation source segment,
            Append it into path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindOperationImport(System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind the identifier as operation import (function import or action import) segment,
            Append it into path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindPropertySegment(System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind the idenfier as property segment,
            Append it into path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindKeySegment(System.String,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind the parenthesisExpressions as key,
            parenthesisExpressions should have '(' and ')' wrapped.
            </summary>
            <param name="parenthesisExpressions">'(' and ')' wrapped string.</param>
            <param name="path">the decorated path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindTypeCastSegment(System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind namespace-qualified type cast segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.TryBindOperations(System.String,System.String,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Try to bind the idenfier as bound operation segment,
            Append it into path.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser.Parse(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Parses the specified OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="odataPath">The OData path template to parse.</param>
            <returns>A parsed representation of the template, or <c>null</c> if the template does not match the model.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.SRResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.InputCastTypeKindNotMatch">
            <summary>
              Looks up a localized string similar to The input cast type &apos;{0}&apos; does not match the expected type kind &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.InputKeyNotMatchEntityTypeKey">
            <summary>
              Looks up a localized string similar to The input key count &apos;{0}&apos; doesn&apos;t match the number of the entity type key &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.InvalidODataRouteOnAction">
            <summary>
              Looks up a localized string similar to The path template &apos;{0}&apos; on the action &apos;{1}&apos; in controller &apos;{2}&apos; is not a valid OData path template. {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.MissingNonODataContainer">
            <summary>
              Looks up a localized string similar to Cannot find the services container for the non-OData route. This can occur when using OData components on the non-OData route and is usually a configuration issue. Call EnableDependencyInjection() to enable OData components on non-OData routes. This may also occur when a request was mistakenly handled by the ASP.NET Core routing layer instead of the OData routing layer, for instance the URL does not include the OData route prefix configured via a call to MapODataServiceRoute()..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.MissingODataContainer">
            <summary>
              Looks up a localized string similar to Cannot find the services container for route &apos;{0}&apos;. This should not happen and represents a bug..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.MissingODataServices">
            <summary>
              Looks up a localized string similar to Cannot find &apos;{0}&apos;. The OData services have not been configured. Are you missing a call to AddOData()?.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.NullContainer">
            <summary>
              Looks up a localized string similar to The container built by the container builder must not be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.RequestMustHaveModel">
            <summary>
              Looks up a localized string similar to The request must have an associated EDM model. Consider using the extension method HttpConfiguration.MapODataServiceRoute to register a route that parses the OData URI and attaches the model information..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.SRResources.TypeMustBeRelated">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not inherit from and is not a base type of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmActionImport"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmActionImport,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate" /> class.
            </summary>
            <param name="actionImport">The wrapper action import.</param>
            <param name="navigationSource">The target navigation source. it could be null.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.ActionImport">
            <summary>
            Gets the wrapped action import.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate" /> class.
            </summary>
            <param name="action">The Edm action.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate" /> class.
            </summary>
            <param name="action">The Edm action.</param>
            <param name="navigationSource">Unqualified function/action call boolean value.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.Action">
            <summary>
            Gets the wrapped Edm action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate">
            <summary>
            Represents a template that could match a type cast segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate" /> class.
            </summary>
            <param name="castType">The actual structured type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.#ctor(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            
            </summary>
            <param name="typeSegment"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate" /> class.
            </summary>
            <param name="castType">The cast Edm type.</param>
            <param name="expectedType">The expected Edm type.</param>
            <param name="navigationSource">The target navigation source. it could be null.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.ExpectedType">
            <summary>
            Gets the expected type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.CastType">
            <summary>
            Gets the actual structured type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate">
            <summary>
            Represents a template that could match a $count segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.Instance">
            <summary>
            Gets the static instance of <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmEntitySet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate" /> class.
            </summary>
            <param name="entitySet">The Edm entity set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.EntitySet">
            <summary>
            Gets the wrapped entity set.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmFunctionImport"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmFunctionImport,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate" /> class.
            </summary>
            <param name="functionImport">The Edm function import.</param>
            <param name="navigationSource">The target navigation source, it could be null.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.NavigationSource">
            <summary>
            Gets the target Navigation source of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.FunctionImport">
            <summary>
            Gets the wrapped Edm function import.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate" /> class.
            </summary>
            <param name="function">The Edm function.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate" /> class.
            </summary>
            <param name="function">The Edm function.</param>
            <param name="navigationSource">Unqualified function call boolean value.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.Function">
            <summary>
            Gets the wrapped Edm function.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.UnqualifiedIdentifier">
            <summary>
            Key=value, Key=value
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate">
            <summary>
            Represents a template that could match a key segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate._keyMappings">
            <summary>
            Key/Value pairs:
            Key: entity type key name, for example ID
            Value: a tuple of (string, IEdmTypeReference): Item1 is the mapped name, Item2 is the key's type
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="entityType">The declaring type containes the key.</param>
            <param name="navigationSource"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="entityType">The declaring type containes the key.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="entityType">The declaring type containes the key.</param>
            <param name="keyPrefix">The prefix for the key mapping, for example, for the navigation it count be "relatedKey".</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="keys">The input key mappings.</param>
            <param name="entityType">The declaring type containes the key.</param>
            <param name="navigationSource">The navigation source.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.EntityType">
            <summary>
            Gets the entity type declaring this key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.Count">
            <summary>
            Gets the key count
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate">
            <summary>
            Represents a template that could match $metadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.Instance">
            <summary>
            Gets the static instace of $metadata
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate" /> class.
            </summary>
            <param name="navigation">The Edm navigation property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate" /> class.
            </summary>
            <param name="navigation">The Edm navigation property.</param>
            <param name="targetNavigationSource">The target navigation source.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.Navigation">
            <summary>
            Gets the wrapped navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.TargetNavigationSource">
            <summary>
            Gets the wrapped navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathSegmentGeneratorContext">
            <summary>
            The context used to generate the <see cref="T:Microsoft.OData.UriParser.ODataPathSegment"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathSegmentGeneratorContext.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathSegmentGeneratorContext.HttpContext">
            <summary>
            Gets the current HttpContext.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathSegmentGeneratorContext.RouteValues">
            <summary>
            Gets the route values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathSegmentGeneratorContext.NavigationSource">
            <summary>
            Gets the previous navigation source.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate">
            <summary>
            Represents a path template that could contains a list of <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segment templates for the path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segment templates for the path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.Segments">
            <summary>
            Gets the path segments for the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.KeyAsSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.GetTemplates">
            <summary>
            Gets the all templates supported in this path.
            </summary>
            <returns>The supported templates.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.GetTemplate(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="keyAsSegment"></param>
            <param name="unqualifiedCall"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.GenerateODataPath(Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="routeValue"></param>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.Template">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.EntitySet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Singleton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Key">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Cast">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Property">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Navigation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Function">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Action">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.FunctionImport">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.ActionImport">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Value">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Ref">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKind.Count">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds">
            <summary>
            Provides the values of segment kinds for implementations of <see cref="!:ODataPathSegment" />.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.ServiceBase">
            <summary>
            Represents the service root segment (for OData service document).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Batch">
            <summary>
            Represents the OData $batch segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Ref">
            <summary>
            Represents the OData $ref segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Metadata">
            <summary>
            Represents the OData $metadata segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Value">
            <summary>
            Represents the OData $value segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Action">
            <summary>
            Represents a segment indicating an OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Cast">
            <summary>
            Represents a segment indicating a type cast.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.EntitySet">
            <summary>
            Represents a segment indicating an entity set.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Key">
            <summary>
            Represents a segment indicating an index by key operation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Navigation">
            <summary>
            Represents a segment indicating a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Property">
            <summary>
            Represents a segment indicating a property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentKinds.Unresolved">
            <summary>
            Represents a segment that is not understood.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate">
            <summary>
            Represents an OData segment template that could match an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.Literal">
            <summary>
            Gets the segment URL literal.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.Kind">
            <summary>
            Gets the segment kind.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.EdmType">
            <summary>
            Gets the Edm type of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.NavigationSource">
            <summary>
            Gets the target Navigation source of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.IsSingle">
            <summary>
            Gets a value indicating whether the output value is single value or collection value of this segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="previous"></param>
            <param name="routeValue"></param>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate">
            <summary>
            Represents a template that could match '{property}' segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate" /> class.
            </summary>
            <param name="declaredType">The declared type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.StructuredType">
            <summary>
            Gets the declared type for this property template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmStructuralProperty"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuralProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate" /> class.
            </summary>
            <param name="property">The wrapped Edm property.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.Property">
            <summary>
            Gets the wrapped Edm property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate">
            <summary>
            Represents a template that could match a $ref segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate" /> class.
            </summary>
            <param name="navigation">The Edm navigation property.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.Navigation">
            <summary>
            Gets the wrapped navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.RefSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmSingleton)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate" /> class.
            </summary>
            <param name="singleton">The Edm singleton</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.Singleton">
            <summary>
            Gets the wrapped Edm singleton.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate">
            <summary>
            Represents a template that could match a $value segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate" /> class.
            </summary>
            <param name="previousType">The value segment Edm type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.Literal">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.EdmType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.IsSingle">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.ValueType">
            <summary>
            Gets the value type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.GenerateODataSegment(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Http.QueryString)">
            <inheritdoc />
        </member>
    </members>
</doc>
