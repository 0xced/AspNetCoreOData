<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.OData.Abstracts</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.AnnotationHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.AnnotationHelper.GetConcurrencyProperties(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="navigationSource"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.AnnotationHelper.GetClrEnumMemberAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEnumType)">
            <summary>
            
            </summary>
            <param name="edmModel"></param>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.AnnotationHelper.GetClrPropertyName(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            
            </summary>
            <param name="edmModel"></param>
            <param name="edmProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.AnnotationHelper.GetDynamicPropertyDictionary(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            
            </summary>
            <param name="edmModel"></param>
            <param name="edmType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrEnumMemberAnnotation">
            <summary>
            Represents a mapping betwwen an <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/> and a CLR Enum member.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrEnumMemberAnnotation.#ctor(System.Collections.Generic.IDictionary{System.Enum,Microsoft.OData.Edm.IEdmEnumMember})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrEnumMemberAnnotation"/> class.
            </summary>
            <param name="map">The mapping between CLR Enum member and the EDM <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrEnumMemberAnnotation.GetEdmEnumMember(System.Enum)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/> for the CLR Enum member.
            </summary>
            <param name="clrEnumMemberInfo">The backing CLR Enum member info.</param>
            <returns>The Edm <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrEnumMemberAnnotation.GetClrEnumMember(Microsoft.OData.Edm.IEdmEnumMember)">
            <summary>
            Gets the CLR Enum member for <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/>.
            </summary>
            <param name="edmEnumMember">The Edm <see cref="T:Microsoft.OData.Edm.IEdmEnumMember"/>.</param>
            <returns>The backing CLR Enum member info.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrPropertyInfoAnnotation">
            <summary>
            Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> to a CLR property info.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrPropertyInfoAnnotation.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrPropertyInfoAnnotation"/> class.
            </summary>
            <param name="clrPropertyInfo">The backing CLR property info for the EDM property.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrPropertyInfoAnnotation.ClrPropertyInfo">
            <summary>
            Gets the backing CLR property info for the EDM property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrTypeAnnotation">
            <summary>
            Represents a mapping from an <see cref="T:Microsoft.OData.Edm.IEdmType"/> to a CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrTypeAnnotation.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrTypeAnnotation"/> class.
            </summary>
            <param name="clrType">The backing CLR type for the EDM type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.ClrTypeAnnotation.ClrType">
            <summary>
            Gets the backing CLR type for the EDM type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ConcurrencyPropertiesAnnotation">
            <summary>
            Annotation to store cache for concurrency properties
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.CustomAggregateMethodAnnotation">
            <summary>
            Allows client to tell OData which are the custom aggregation methods defined.
            In order to do it, it must receive a methodToken - that is the full identifier
            of the method in the OData URL - and an IDictionary that maps the input type
            of the aggregation method to its MethodInfo.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.CustomAggregateMethodAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.CustomAggregateMethodAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.CustomAggregateMethodAnnotation.AddMethod(System.String,System.Collections.Generic.IDictionary{System.Type,System.Reflection.MethodInfo})">
            <summary>
            Adds all implementations of a method that share the same methodToken.
            </summary>
            <param name="methodToken">The given method token.</param>
            <param name="methods">The given method dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.CustomAggregateMethodAnnotation.GetMethodInfo(System.String,System.Type,System.Reflection.MethodInfo@)">
            <summary>
            Get an implementation of a method with the specifies returnType and methodToken.
            If there's no method that matches the requirements, returns null.
            </summary>
            <param name="methodToken">The given method token.</param>
            <param name="returnType">The given return type.</param>
            <param name="methodInfo">The output of method info.</param>
            <returns>True if the method info was found, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation">
            <summary>
            This annotation indicates the mapping from a <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> to a <see cref="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.PropertyInfo"/>.
            The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> is an open type and the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.PropertyInfo"/> is the specific
            property which is used in an open type to save/retrieve the dynamic properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation"/> class.
            </summary>
            <param name="propertyInfo">The backing <see cref="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.PropertyInfo"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.PropertyInfo">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.DynamicPropertyDictionaryAnnotation.PropertyInfo"/> which backs the dynamic properties of the open type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation" /> is a class used to annotate an <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> inside an <see cref="T:Microsoft.OData.Edm.IEdmModel" />
            with information about how to build links related to that navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation" /> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.NavigationSourceLinkBuilderAnnotation"/> class.
            </summary>
            <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
            <param name="model">The EDM model that this navigation source belongs to.</param>
            <remarks>This constructor creates a link builder that generates URL's that follow OData conventions for the given navigation source.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Annotations.ReturnedEntitySetAnnotation">
            <summary>
            This annotation indicates the mapping from an <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> to a <see cref="T:System.String"/>.
            The <see cref="T:Microsoft.OData.Edm.IEdmOperation"/> is a bound action/function and the <see cref="T:System.String"/> is the
            entity set name given by user to indicate the entity set returned from this action/function.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Annotations.ReturnedEntitySetAnnotation.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="entitySetName"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Annotations.ReturnedEntitySetAnnotation.EntitySetName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions">
            <summary>
            Helper extension methods for fast use of collections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.AppendAndReallocate``1(``0[],``0)">
            <summary>
            Return a new array with the value added to the end. Slow and best suited to long lived arrays with few writes relative to reads.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.AsArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as an Array, copying if required. Optimized for common case where it is an Array. 
            Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.AsCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a Collection of T, copying if required. Optimized for the common case where it is 
            a Collection of T and avoiding a copy if it implements IList of T. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.AsIList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a IList of T, copying if required. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.AsList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a List of T, copying if required. Optimized for common case where it is an List of T 
            or a ListWrapperCollection of T. Avoid mutating the return value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.RemoveFrom``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Remove values from the list starting at the index start.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.SingleDefaultOrError``2(System.Collections.Generic.IList{``0},System.Action{``1},``1)">
            <summary>
            Return the only value from list, the type's default value if empty, or call the errorAction for 2 or more.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.SingleOfTypeDefaultOrError``3(System.Collections.Generic.IList{``0},System.Action{``2},``2)">
            <summary>
            Returns a single value in list matching type TMatch if there is only one, null if there are none of type TMatch or calls the
            errorAction with errorArg1 if there is more than one.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.ToArrayWithoutNulls``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Convert an ICollection to an array, removing null values. Fast path for case where there are no null values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.ToDictionaryFast``2(``1[],System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the array to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for array input.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.ToDictionaryFast``2(System.Collections.Generic.IList{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the list to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for IList of T input with fast path for array.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.ToDictionaryFast``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the enumerable to a Dictionary using the keySelector to extract keys from values and the specified comparer. Fast paths for array and IList of T.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.CollectionExtensions.ToDictionaryFastNoCheck``2(System.Collections.Generic.IList{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Convert the list to a Dictionary using the keySelector to extract keys from values and the specified comparer. Optimized for IList of T input. No checking for other types.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.DefaultAssemblyResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.DefaultAssemblyResolver.Default">
            <summary>
            This static instance is used in the shared code in places where the request container context
            is not known or does not contain an instance of IWebApiAssembliesResolver.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.DefaultAssemblyResolver.Assemblies">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.DefaultODataBuilder">
            <summary>
            An interface for configuring essential OData services.
            </summary>
            <summary>
            Allows fine grained configuration of essential OData services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.DefaultODataBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.DefaultODataBuilder"/> class.
            </summary>
            <param name="services">The service collection.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.DefaultODataBuilder.Services">
            <summary>
            Gets the services collection.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers">
            <summary>
            Provides the functionalities related to the <see cref="T:System.Type"/> and Edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.GetEdmPrimitiveType(System.Type)">
            <summary>
            
            </summary>
            <param name="clrType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.IsNullable(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.GetEdmPrimitiveTypeReference(System.Type)">
            <summary>
            
            </summary>
            <param name="clrType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.GetClrType(Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="edmTypeReference"></param>
            <param name="edmModel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.IsNonstandardEdmPrimitive(System.Type,System.Boolean@)">
            <summary>
            figures out if the given clr type is nonstandard edm primitive like uint, ushort, char[] etc.
            and returns the corresponding clr type to which we map like uint => long.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.GetClrType(Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Abstracts.IAssemblyResolver)">
            <summary>
            
            </summary>
            <param name="edmTypeReference"></param>
            <param name="edmModel"></param>
            <param name="assembliesResolver"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.EdmHelpers.ToEdmTypeReference(Microsoft.OData.Edm.IEdmType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="edmType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Edm.BindableOperationFinder">
            <summary>
            This class builds a cache that allows for efficient look up of bindable operation by EntityType. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.BindableOperationFinder.#ctor(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Constructs a concurrent cache for looking up bindable operations for any EntityType in the provided model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.BindableOperationFinder.FindOperations(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Finds operations that can be invoked on the given entity type. This would include all the operations that are bound
            to the given type and its base types.
            </summary>
            <param name="entityType">The EDM entity type.</param>
            <returns>A collection of operations bound to the entity type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.BindableOperationFinder.FindOperationsBoundToCollection(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Finds operations that can be invoked on the feed. This would include all the operations that are bound to the given
            type and its base types.
            </summary>
            <param name="entityType">The EDM entity type.</param>
            <returns>A collection of operations bound to the feed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Edm.EdmModelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.EdmModelExtensions.GetAvailableActions(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.EdmModelExtensions.GetAvailableFunctions(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.EdmModelExtensions.GetAvailableOperationsBoundToCollection(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Edm.EdmModelExtensions.GetAvailableOperations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <param name="boundToCollection"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler">
            <summary>
            Exposes the ability to convert a collection of concurrency property names and values into an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/>
            and parse an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> into a list of concurrency property values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.IETagHandler.CreateETag(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an ETag from concurrency property names and values.
            </summary>
            <param name="properties">The input property names and values.</param>
            <returns>The generated ETag string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.IETagHandler.ParseETag(Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Parses an ETag header value into concurrency property names and values.
            </summary>
            <param name="etagHeaderValue">The ETag header value.</param>
            <returns>Concurrency property names and values.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.FastPropertyAccessor`1">
            <summary>
            FastPropertyAccessor is a <see cref="T:Microsoft.AspNetCore.OData.Abstracts.PropertyAccessor`1"/> that speeds up (compares to reflection)
            a Getter and Setter for the PropertyInfo of TEntityType provided via the constructor.
            </summary>
            <typeparam name="TStructuralType">The type on which the PropertyInfo exists</typeparam>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.HttpContextExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpContextExtensions.ODataFeature(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Extension method to return the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="httpContext">The Http context.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpContextExtensions.GetUrlHelper(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Extension method to return the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="httpContext">The Http context.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpContextExtensions.GetLinkGenerator(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Extension method to return the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="httpContext">The Http context.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.ODataFeature(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the services container.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the services container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetModel(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> from the request container.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetUrlHelper(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Extension method to return the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.
            </summary>
            <param name="request">The Http request.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetReaderSettings(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetWriterSettings(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.CreateETag(Microsoft.AspNetCore.Http.HttpRequest,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an ETag from concurrency property names and values.
            </summary>
            <param name="request">The input property names and values.</param>
            <param name="properties">The input property names and values.</param>
            <returns>The generated ETag string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetETagHandler(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler"/> from the services container.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler"/> from the services container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.HttpRequestExtensions.GetODataResponseVersion(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IAssemblyResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IAssemblyResolver.Assemblies">
            <summary>
            Gets a list of assemblies available for the application.
            </summary>
            <returns>A list of assemblies available for the application. </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider">
            <summary>
            Provides the mapping between CLR type and Edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider.MapTo(System.Type)">
            <summary>
            Maps a CLR type to standard CLR type.
            </summary>
            <param name="clrType">The potential non-standard CLR type.</param>
            <returns>The standard CLR type or the input CLR type itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider.GetEdmPrimitiveType(System.Type)">
            <summary>
            Gets the corresponding Edm primitive type for the given CLR type.
            </summary>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider.GetClrPrimitiveType(Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm primitive type.
            </summary>
            <param name="edmPrimitiveType">The given Edm primitive type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm type.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider.GetEdmType(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the corresponding Edm type for the given CLR type.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="clrType">The CLR type.</param>
            <returns>Null or the corresponding Edm type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataClrTypeCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataClrTypeCache.GetEdmType(System.Type,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="clrType"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Interfaces.ODataClrTypeCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Interfaces.ODataClrTypeCache.#ctor(Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Interfaces.ODataClrTypeCache"/> class.
            </summary>
            <param name="typeProvider">The registered type provider.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IODataBuilder">
            <summary>
            An interface for configuring essential OData services.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataBuilder.Services">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> where essential OData services are configured.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature">
            <summary>
            Provide the interface for the details of a given OData request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Model">
            <summary>
            Gets or sets the OData model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Path">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.RouteName">
            <summary>
            Gets/sets the route name
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Endpoint">
            <summary>
            Gets/sets the endpoint selected
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.UrlHelper">
            <summary>
            Gets or sets the Url helper.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.BodyValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ListWrapperCollection`1">
            <summary>
            A class that inherits from Collection of T but also exposes its underlying data as List of T for performance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute">
            <summary>
            
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute.ShouldValidateEntry(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry)">
            <summary>
            
            </summary>
            <param name="entry"></param>
            <param name="parentEntry"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute.BindingSource">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataActionParameters">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataFeature">
            <summary>
            Contains the details of a given OData request. These properties should all be mutable.
            None of these properties should ever be set to null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataFeature"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Model">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Path">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Endpoint">
            <summary>
            Add a boolean value indicate whether it's endpoint routing or not.
            Maybe it's unnecessary later.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RouteName">
            <summary>
            Gets or sets the route name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.UrlHelper">
            <summary>
            Gets or sets the Url helper.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.BodyValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataOptions">
            <summary>
            Contains the details of a given OData request. These properties should all be mutable.
            None of these properties should ever be set to null.
            </summary>
            <summary>
            Provides programmatic configuration for the OData service.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.UrlKeyDelimiter">
            <summary>
            Gets or Sets the <see cref="T:Microsoft.OData.ODataUrlKeyDelimiter"/> to use while parsing, specifically
            whether to recognize keys as segments or not in DefaultODataPathHandler.
            </summary>
            <remarks>Default value is unspecified (null).</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.NullDynamicPropertyIsEnabled">
            <summary>
            Gets or Sets a value indicating if value should be emitted for dynamic properties which are null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.EnableContinueOnErrorHeader">
            <summary>
            Gets or Sets a value indicating if batch requests should continue on error.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.EnableAttributeRouting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.Models">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.UseAttributeRouting(System.Boolean)">
            <summary>
            
            </summary>
            <param name="useAttributeRouting"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.UseModel(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataOptions.UseModel(System.String,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataOptionsBuilder">
            <summary>
            Contains the details of a given OData request. These properties should all be mutable.
            None of these properties should ever be set to null.
            </summary>
            <summary>
            Provides programmatic configuration for the OData service.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataOptionsBuilder.#ctor(Microsoft.AspNetCore.OData.Abstracts.ODataOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataOptionsBuilder" /> class.
            </summary>
            <param name="options"> The options to be configured. </param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataOptionsBuilder.Options">
            <summary>
            Gets the options being configured.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataParameterValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataParameterValue.ParameterValuePrefix">
            <summary>
            This prefix is used to identify parameters in [FromODataUri] binding scenario.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataParameterValue.#ctor(System.Object,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            
            </summary>
            <param name="paramValue"></param>
            <param name="paramType"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataParameterValue.EdmType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataParameterValue.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataPathExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathExtensions.GetEdmType(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathExtensions.GetNavigationSource(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathExtensions.GetPathString(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment})">
            <summary>
            
            </summary>
            <param name="segments"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler">
            <summary>
            A handler used to calculate some values based on the odata path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.NavigationSource">
            <summary>
            Gets the path navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.PathTemplate">
            <summary>
            Gets the path template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.PathLiteral">
            <summary>
            Gets the path literal.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.EntitySetSegment)">
            <summary>
            Handle a EntitySetSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Handle a KeySegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.NavigationPropertyLinkSegment)">
            <summary>
            Handle a NavigationPropertyLinkSegment
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.NavigationPropertySegment)">
            <summary>
            Handle a NavigationPropertySegment
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.DynamicPathSegment)">
            <summary>
            Handle a OpenPropertySegment
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Handle a OperationImportSegment
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Handle an OperationSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.PathTemplateSegment)">
            <summary>
            Handle a PropertySegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Handle a PropertySegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.SingletonSegment)">
            <summary>
            Handle a SingletonSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            Handle a TypeSegment, we use "cast" for type segment.
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.ValueSegment)">
            <summary>
            Handle a ValueSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.CountSegment)">
            <summary>
            Handle a CountSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.BatchSegment)">
            <summary>
            Handle a BatchSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.MetadataSegment)">
            <summary>
            Handle a MetadataSegment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.ODataPathSegment)">
            <summary>
            Handle a general path segment
            </summary>
            <param name="segment">the segment to handle</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds">
            <summary>
            Provides the values of segment kinds for implementations of odata path template.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.ServiceBase">
            <summary>
            Represents the service root segment (for OData service document).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Batch">
            <summary>
            Represents the OData $batch segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Ref">
            <summary>
            Represents the OData $ref segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Metadata">
            <summary>
            Represents the OData $metadata segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Value">
            <summary>
            Represents the OData $value segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Count">
            <summary>
            Represents the OData $count segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Action">
            <summary>
            Represents a segment indicating a bound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Function">
            <summary>
            Represents a segment indicating a bound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.UnboundAction">
            <summary>
            Represents a segment indicating an unbound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.UnboundFunction">
            <summary>
            Represents a segment indicating an unbound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Cast">
            <summary>
            Represents a segment indicating a type cast.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.EntitySet">
            <summary>
            Represents a segment indicating an entity set.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Singleton">
            <summary>
            Represents a segment indicating a singleton.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Key">
            <summary>
            Represents a segment indicating an index by key operation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Navigation">
            <summary>
            Represents a segment indicating a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.PathTemplate">
            <summary>
            Represents a segment indicating a navigation link.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Property">
            <summary>
            Represents a segment indicating a property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.DynamicProperty">
            <summary>
            Represents a segment indicating an dynamic property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataSegmentKinds.Unresolved">
            <summary>
            Represents a segment that is not understood.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataServiceCollectionExtensions">
            <summary>
            Provides extension methods to add odata services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataServiceCollectionExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataServiceCollectionExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.OData.Abstracts.ODataOptions})">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataServiceCollectionExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.OData.Abstracts.ODataOptionsBuilder})">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider">
            <summary>
            The default implementation for <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Interfaces.IODataTypeMappingProvider"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider._cache">
            <summary>
            The cache used to hold the type mapping between <see cref="T:System.Type"/> and <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider._assemblyResolver">
            <summary>
            The registered assembly resolver.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.#ctor(Microsoft.AspNetCore.OData.Abstracts.IAssemblyResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider"/> class.
            </summary>
            <param name="resolver">The registered assembly resolver.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.MapTo(System.Type)">
            <summary>
            Maps a CLR type to standard CLR type.
            </summary>
            <param name="clrType">The potential non-standard CLR type.</param>
            <returns>The standard CLR type or the input CLR type itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetEdmPrimitiveType(System.Type)">
            <summary>
            Gets the corresponding Edm primitive type for the given CLR type.
            </summary>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetClrPrimitiveType(Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm primitive type.
            </summary>
            <param name="edmPrimitiveType">The given Edm primitive type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm type reference.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetEdmType(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the Edm type for the given Clr Type.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="clrType">The given Clr type.</param>
            <returns>Null or the Edm type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.FindClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType)">
            <summary>
            
            </summary>
            <param name="edmModel"></param>
            <param name="edmType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetClrTypeInCache(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the <see cref="T:System.Type"/> from the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="edmType">The given Edm type.</param>
            <returns>Null or the Clr type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.GetEdmTypeInCache(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> from the given <see cref="T:System.Type"/> in the cache.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="clrType">The given Clr type.</param>
            <returns>Null or the Edm type reference.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.AddTypeMapping(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Add the mapping between <see cref="T:System.Type"/> and <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="clrType">The Clr type.</param>
            <param name="edmType">The Edm type reference.</param>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.ODataTypeMappingProvider.BuiltInPrimitiveTypes">
            <summary>
            The mapping between Edm primitive type and Clr primitive type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataUntypedActionParameters">
            <summary>
            ActionPayload holds the Parameter names and values provided by a client in a POST request
            to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataUntypedActionParameters.#ctor(Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataUntypedActionParameters"/> class.
            </summary>
            <param name="action">The OData action of this parameters.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataUntypedActionParameters.Action">
            <summary>
            Gets the OData action of this parameters.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataVersionConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.SRResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentInvalidAbsoluteUri">
            <summary>
              Looks up a localized string similar to Relative URI values are not supported: &apos;{0}&apos;. The URI must be absolute..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentInvalidHttpUriScheme">
            <summary>
              Looks up a localized string similar to Unsupported URI scheme: &apos;{0}&apos;. The URI scheme must be either &apos;{1}&apos; or &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentMustBeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.ArgumentUriHasQueryOrFragment">
            <summary>
              Looks up a localized string similar to URI must not contain a query component or a fragment identifier..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.CannotSetDynamicPropertyDictionary">
            <summary>
              Looks up a localized string similar to The dynamic dictionary property &apos;{0}&apos; of type &apos;{1}&apos; cannot be set. The dynamic property dictionary must have a setter..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.DeltaEntityTypeNotAssignable">
            <summary>
              Looks up a localized string similar to The actual entity type &apos;{0}&apos; is not assignable to the expected type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.DeltaNestedResourceNameNotFound">
            <summary>
              Looks up a localized string similar to Cannot find nested resource name &apos;{0}&apos; in parent resource type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.DeltaTypeMismatch">
            <summary>
              Looks up a localized string similar to Cannot use Delta of type &apos;{0}&apos; on an entity of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.EdmComplexObjectNullRef">
            <summary>
              Looks up a localized string similar to Cannot get property &apos;{0}&apos; of a null EDM object of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.EdmTypeNotSupported">
            <summary>
              Looks up a localized string similar to {0} is not a supported EDM type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.InvalidEnumArgument">
            <summary>
              Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.MultipleMatchingClrTypesForEdmType">
            <summary>
              Looks up a localized string similar to More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeBoolean">
            <summary>
              Looks up a localized string similar to The value must be a boolean..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeDateTimeOffsetOrDate">
            <summary>
              Looks up a localized string similar to The value must be a DateTimeOffset or Date..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeEnum">
            <summary>
              Looks up a localized string similar to The value with type &apos;{0}&apos; must have type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeString">
            <summary>
              Looks up a localized string similar to The value must be a string..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeStringLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a length of 1..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeStringMaxLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a maximum length of 1..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.PropertyMustBeTimeOfDay">
            <summary>
              Looks up a localized string similar to The value must be a Edm.TimeOfDay..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.TypeMustBeEnumOrNullableEnum">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be an enum or Nullable&lt;T&gt; where T is an enum type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.UnexpectedElementType">
            <summary>
              Looks up a localized string similar to The element type &apos;{0}&apos; of the given collection type &apos;{1}&apos; is not of the type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SRResources.UnsupportedEdmType">
            <summary>
              Looks up a localized string similar to The EDM type &apos;{0}&apos; of kind &apos;{1}&apos; is not supported..
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.PropertyAccessor`1">
            <summary>
            Represents a strategy for Getting and Setting a PropertyInfo on <typeparamref name="TStructuralType"/>
            </summary>
            <typeparam name="TStructuralType">The type that contains the PropertyInfo</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast property helper. This constructor does not cache the helper.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.PropertyHelper.MakeFastPropertySetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast setter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of this instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings">
            <summary>
            This class describes the default settings to use during query composition.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableExpand">
            <summary>
            Gets or sets a value indicating whether navigation property can be expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableSelect">
            <summary>
            Gets or sets a value indicating whether property can be selected.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableCount">
            <summary>
            Gets or sets a value indicating whether entity set and property can apply $count.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableOrderBy">
            <summary>
            Gets or sets a value indicating whether property can apply $orderby.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableFilter">
            <summary>
            Gets or sets a value indicating whether property can apply $filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.MaxTop">
            <summary>
            Gets or sets the max value of $top that a client can request.
            </summary>
            <value>
            The max value of $top that a client can request, or <c>null</c> if there is no limit.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.DefaultQuerySettings.EnableSkipToken">
            <summary>
            Gets or sets a value indicating whether the service will use skiptoken or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper">
            <summary>
            The result of a $select and $expand projection is represented as an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/>
            instance. That instance can be projected into an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance by calling
            <see cref="!:ISelectExpandWrapper.ToDictionary(Func&lt;IEdmModel,IEdmStructuredType,IPropertyMapper&gt;)"/>. 
            That method will use the function to construct an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper"/> that will map the property 
            names in that projection to the keys in the returned <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            The main purpose of converting an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/> instance into an 
            <see cref="T:System.Collections.Generic.IDictionary`2"/> (using the method mentioned above) is to allow changing the names of the 
            properties in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that will be used during the serialization of the $select 
            and $expand projection by a given formatter. For example, to support custom serialization attributes of a
            particular formatter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper.MapProperty(System.String)">
            <summary>
            Defines a mapping between the name of an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>
            and the name that should be used in other contexts, for example, when projecting an instance of an 
            <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/> into an instance of an <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
            <param name="propertyName">
            The name of the property in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> represented
            by this instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/>.
            </param>
            <returns>
            The value that will be used as the key for this property in the <see cref="T:System.Collections.Generic.IDictionary`2" />
            resulting from calling ToDictionary on an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/> instance.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper">
            <summary>
            Represents the result of a $select and $expand query operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper.ToDictionary">
            <summary>
            Projects the result of a $select and $expand query to a <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper})">
            <summary>
            Projects the result of a $select and/or $expand query to an <see cref="T:System.Collections.Generic.IDictionary`2" /> using 
            the given <paramref name="propertyMapperProvider"/>. The <paramref name="propertyMapperProvider"/> is used 
            to obtain an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper"/> for the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that this 
            <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/> instance represents. This <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper"/> will be used to 
            map the properties of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ISelectExpandWrapper"/> instance to the keys of the 
            returned <see cref="T:System.Collections.Generic.IDictionary`2"/>. This method can be used, for example, to map the property 
            names in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> to the names that should be used to serialize the properties 
            that this projection contains.
            </summary>
            <param name="propertyMapperProvider">
            A function that provides a new instance of an <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.IPropertyMapper"/> for a given 
            <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> and a given <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </param>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext">
            <summary>
            This defines some context information used to perform query composition.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element CLR type,
            and <see cref="T:Microsoft.OData.UriParser.ODataPath" />.
            </summary>
            <param name="model">The EdmModel that includes the <see cref="T:Microsoft.OData.Edm.IEdmType"/> corresponding to
            the given <paramref name="elementClrType"/>.</param>
            <param name="elementClrType">The CLR type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.</param>
            <remarks>
            This is a public constructor used for stand-alone scenario; in this case, the services
            container may not be present.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element EDM type,
            and <see cref="T:Microsoft.OData.UriParser.ODataPath" />.
            </summary>
            <param name="model">The EDM model the given EDM type belongs to.</param>
            <param name="elementType">The EDM type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.DefaultQuerySettings">
            <summary>
            Gets the given <see cref="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.DefaultQuerySettings"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.Model">
            <summary>
            Gets the given <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that contains the EntitySet.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.ElementType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.NavigationSource">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that contains the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.ElementClrType">
            <summary>
            Gets the CLR type of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.Path">
            <summary>
            Gets the <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.Query.ODataQueryContext.RequestContainer">
            <summary>
            Gets the request container.
            </summary>
            <remarks>
            The services container may not be present. See the constructor in this file for
            use in stand-alone scenarios.
            </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty._propertySegment">
            <summary>
            the corresponding property segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty._navigationSource">
            <summary>
            the corresponding navigation source. maybe useless
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty._propertySelectItem">
            <summary>
            the path select item for this property.
            for example: $select=abc or $select=NS.Type/abc
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty._subSelectItems">
            <summary>
            the sub $select and $expand for this property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty.#ctor(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty"/> class.
            </summary>
            <param name="propertySegment">The property segment that has this select expand item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty.#ctor(Microsoft.OData.UriParser.PropertySegment,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty"/> class.
            </summary>
            <param name="propertySegment">The property segment that has this select expand item.</param>
            <param name="navigationSource">The targe navigation source of this property segment.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty.ToPathSelectItem">
            <summary>
            Gets the merged <see cref="T:Microsoft.OData.UriParser.PathSelectItem"/> for this property.
            </summary>
            <returns>Null or the created <see cref="T:Microsoft.OData.UriParser.PathSelectItem"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty.AddSubSelectItem(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment},Microsoft.OData.UriParser.PathSelectItem)">
            <summary>
            Add sub $select item for this include property.
            </summary>
            <param name="remainingSegments">The remaining segments star from this include property.</param>
            <param name="oldSelectItem">The old $select item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandIncludedProperty.AddSubExpandItem(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment},Microsoft.OData.UriParser.ExpandedReferenceSelectItem)">
            <summary>
            Add sub $expand item for this include property.
            </summary>
            <param name="remainingSegments">The remaining segments star from this include property.</param>
            <param name="oldRefItem">The old $expand item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandPathExtensions.GetFirstNonTypeCastSegment(Microsoft.OData.UriParser.ODataSelectPath,System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment}@)">
            <summary>
            Verify the $select path and gets the first non type cast segment in a select path.
            For example: $select=NS.SubType1/abc/NS.SubType2/xyz
            => firstPropertySegment: "abc"
            => remainingSegments:  NS.SubType2/xyz
            </summary>
            <param name="selectPath">The input $select path.</param>
            <param name="remainingSegments">The remaining segments after the first non type segment.</param>
            <returns>First non-type cast segment.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Query.SelectExpandPathExtensions.GetFirstNonTypeCastSegment(Microsoft.OData.UriParser.ODataExpandPath,System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment}@)">
            <summary>
            Verify the $expand path and gets the first non type cast segment in this expand path.
            For example: $expand=NS.SubType1/abc/NS.SubType2/nav
            => firstPropertySegment: "abc"
            => remainingSegments:  NS.SubType2/nav
            => leadingTypeSegment: NS.SubType1
            </summary>
            <param name="expandPath">The input $expand path.</param>
            <param name="remainingSegments">The remaining segments after the first non type segment.</param>
            <returns>First non-type cast segment.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.Routing.ODataPathSegmentTranslator">
            <summary>
            Translator the parameter alias, convert node, returned entity set into OData path segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.Routing.ODataPathSegmentTranslator.TranslateParameterAlias(Microsoft.OData.UriParser.SingleValueNode,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.UriParser.SingleValueNode})">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="parameterAliasNodes"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult">
            <summary>
            Represents an <see cref="T:System.Linq.IQueryable"/> containing zero or one entities. Use together with an
            <c>[EnableQuery]</c>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.SingleResult.#ctor(System.Linq.IQueryable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult"/> class.
            </summary>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable"/> containing zero or one entities.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SingleResult.Queryable">
            <summary>
            The <see cref="T:System.Linq.IQueryable"/> containing zero or one entities.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.SingleResult.Create``1(System.Linq.IQueryable{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1"/> from an <see cref="T:System.Linq.IQueryable`1"/>. A helper method to instantiate
            a <see cref="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1"/> object without having to explicitly specify the type
            <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the data in the data source.</typeparam>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1">
            <summary>
            Represents an <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities. Use together with an
            <c>[EnableQuery]</c>.
            </summary>
            <typeparam name="T">The type of the data in the data source.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1"/> class.
            </summary>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.SingleResult`1.Queryable">
            <summary>
            The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.TypeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.GetInnerElementType(System.Type)">
            <summary>
            Return the collection element type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The collection element type from a type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsDateTime(System.Type)">
            <summary>
            Determine if a type is a DateTime.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a DateTime; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsTimeSpan(System.Type)">
            <summary>
            Determine if a type is a TimeSpan.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a TimeSpan; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsTypeAssignableFrom(System.Type,System.Type)">
            <summary>
            Determine if a type is assignable from another type.
            </summary>
            <param name="clrType">The type to test.</param>
            <param name="fromType">The type to assign from.</param>
            <returns>True if the type is assignable; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.GetReflectedType(System.Reflection.MemberInfo)">
            <summary>
            Return the reflected type from a member info.
            </summary>
            <param name="memberInfo">The member info to convert.</param>
            <returns>The reflected type from a member info.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsValueType(System.Type)">
            <summary>
            Determine if a type is a value type.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a value type; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsEnum(System.Type)">
            <summary>
            Determine if a type is an enumeration.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsGenericType(System.Type)">
            <summary>
            Determine if a type is a generic type.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a generic type; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsNullable(System.Type)">
            <summary>
            Determine if a type is null-able.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is null-able; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.ToNullable(System.Type)">
            <summary>
            Return the type from a nullable type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The type from a nullable type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsCollection(System.Type)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsCollection(System.Type,System.Type@)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <param name="elementType">out: the element type of the collection.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.IsInterface(System.Type)">
            <summary>
            Determine if a type is an interface.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an interface; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.TypeHelper.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Error">
            <summary>
            Utility class for creating and unwrapping <see cref="T:System.Exception"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Format(System.String,System.Object[])">
            <summary>
            Formats the specified resource string using <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Argument(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Argument(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.PropertyNull">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNull(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNull(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNullOrEmpty(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a default message.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentOutOfRange(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentMustBeGreaterThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="minValue">The minimum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentMustBeLessThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="maxValue">The maximum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.KeyNotFound">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.KeyNotFound(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ObjectDisposed(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ObjectDisposedException"/> initialized according to guidelines.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.OperationCanceled">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.OperationCanceled(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> for an invalid enum argument.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A <see cref="T:System.Type"/> that represents the enumeration class with the valid values.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidOperation(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.NotSupported(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta">
            <summary>
            A class the tracks changes (i.e. the Delta) for an entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            <remarks>
            Only properties that exist on Entity can be set.
            If there is a type mismatch the request will fail.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of Entity can be set.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of Entity can be got.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an
            enumeration of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an
            enumeration of Property Names
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1">
            <summary>
            A class the tracks changes (i.e. the Delta) for a particular <typeparamref name="TStructuralType"/>.
            </summary>
            <typeparam name="TStructuralType">TStructuralType is the type of the instance this delta tracks changes for.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="TStructuralType"/>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="TStructuralType"/>.
            </param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="TStructuralType"/>.
            </param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
            <param name="dynamicDictionaryPropertyInfo">The property info that is used as dictionary of dynamic
            properties. <c>null</c> means this entity type is not open.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.StructuredType">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.ExpectedClrType">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.TrySetPropertyValue(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.TryGetPropertyType(System.String,System.Type@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.GetInstance">
            <summary>
            Returns the instance that holds all the changes (and original values) being tracked by this Delta.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.GetChangedPropertyNames">
            <summary>
            Returns the known properties that have been modified through this <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta"/> as an
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> of property Names.
            Includes the structural properties at current level.
            Does not include the names of the changed dynamic properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.GetUnchangedPropertyNames">
            <summary>
            Returns the known properties that have not been modified through this <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta"/> as an
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> of property Names. Does not include the names of the changed dynamic
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.CopyChangedValues(`0)">
            <summary>
            Copies the changed property values from the underlying entity (accessible via <see cref="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.GetInstance" />)
            to the <paramref name="original"/> entity recursively.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.CopyUnchangedValues(`0)">
            <summary>
            Copies the unchanged property values from the underlying entity (accessible via <see cref="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.GetInstance" />)
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.Patch(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the changes tracked by this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PATCH operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.Put(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the values stored in this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PUT operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.Delta`1.TryGetPropertyRef(`0,System.String,System.Object@)">
            <summary>
            Attempts to get the property by the specified name.
            </summary>
            <param name="structural">The structural object.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyRef">Output for property value.</param>
            <returns>true if the property is found; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection"/> class.
            </summary>
            <param name="entityType">The Edm entity type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection"/> class.
            </summary>
            <param name="entityType">The Edm type of the collection.</param>
            <param name="changedObjectList">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmChangedObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject})">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaCollectionType">
            <summary>
            Implementing IEdmCollectionType to identify collection of DeltaFeed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaCollectionType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaCollectionType.ElementType">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedEntityObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.Reason">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.DeltaKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedEntityObject.NavigationSource">
            <summary>
            The navigation source of the deleted entity. If null, then the deleted entity is from the current feed.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Link object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.Source">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.Target">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.Relationship">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaDeletedLink.DeltaKind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind">
            <summary>
            The Kind of the object within the DeltaPayload used to distinguish between Entry/DeletedEntry/DeltaLink/AddedLink.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind.Entry">
            <summary>
            Corresponds to EdmEntityObject (Equivalent of ODataEntry in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind.DeletedEntry">
            <summary>
            Corresponds to EdmDeltaDeletedEntityObject (Equivalent of ODataDeltaDeletedEntry in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind.DeletedLinkEntry">
            <summary>
            Corresponds to EdmDeltaDeletedLink (Equivalent of ODataDeltaDeletedLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind.LinkEntry">
            <summary>
            Corresponds to EdmDeltaLink (Equivalent of ODataDeltaLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityKind.Unknown">
            <summary>
            Corresponds to any Unknown item added.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaEntityObject.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject.DeltaKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject.NavigationSource">
            <summary>
            The navigation source of the entity. If null, then the entity is from the current feed.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Added/Modified Link object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.Source">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.Target">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.Relationship">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaLink.DeltaKind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaType">
            <summary>
            Implementing IEdmType to identify objects which are part of DeltaFeed Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaType.DeltaKind">
            <summary>
            Returning DeltaKind of the object within DeltaFeed payload
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEntityObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatting.Value.IEdmEntityObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEntityObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEnumObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.Value">
            <summary>
            Gets the value of the enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.IsNullable">
            <summary>
            Gets or sets whether the enum object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumTypeReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEnumObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatting.Value.IEdmEnumObject})">
            <summary>
            Initialzes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmEnumObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmTypeExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.OData.Edm.IEdmType"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmTypeExtensions.IsDeltaFeed(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Method to determine whether the current type is a Delta Feed
            </summary>
            <param name="type">IEdmType to be compared</param>
            <returns>True or False if type is same as <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaCollectionType"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmTypeExtensions.IsDeltaResource(Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject)">
            <summary>
            Method to determine whether the current Edm object is a Delta Entry
            </summary>
            <param name="resource">IEdmObject to be compared</param>
            <returns>True or False if type is same as <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaEntityObject"/> or <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmDeltaComplexObject"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmStructuredObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.ExpectedEdmType">
            <summary>
            Gets or sets the expected <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.ActualEdmType">
            <summary>
            Gets or sets the actual <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.IsNullable">
            <summary>
            Gets or sets whether the EDM object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.TryGetDynamicProperties">
            <summary>
            Get all dynamic properties
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.GetChangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.GetUnchangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.EdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IDelta">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IDelta" /> allows and tracks changes to an object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>Returns <c>true</c> if successful and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IDelta.Clear">
            <summary>
            Clears the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IDelta" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>.
            Base interface to be implemented by any Delta object required to be part of the DeltaFeed Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject.DeltaKind">
            <summary>
            DeltaKind for the objects part of the DeltaFeed Payload.
            Used to determine which Delta object to create during serialization.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedEntityObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaDeletedEntry.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedEntityObject.Id">
            <summary>
            The id of the deleted entity (same as the odata.id returned or computed when calling GET on resource), which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedEntityObject.Reason">
            <summary>
            Optional. Either deleted, if the entity was deleted (destroyed), or changed if the entity was removed from membership in the result (i.e., due to a data change).
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaDeletedLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLinkBase">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create either ODataDeltaLink or ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLinkBase.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLinkBase.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.IEdmDeltaLinkBase.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEntityObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEnumObject">
            <summary>
            Represents an instance of an enum value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IEdmObject.GetEdmType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.
            </summary>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmStructuredObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Gets the value of the property with the given name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="value">When this method returns, contains the value of the property with the given name, if the property is found;
            otherwise, null. The parameter is passed uninitialized.</param>
            <returns><c>true</c> if the instance contains the property with the given name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.NullEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject"/> that is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.NullEdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.NullEdmComplexObject"/> class.
            </summary>
            <param name="edmType">The EDM type of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.NullEdmComplexObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedDelta">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.Delta"/> that can be used when a backing CLR type exists for
            the entity type and complex type whose changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.TypedDelta.StructuredType">
            <summary>
            Gets the actual type of the structural object for which the changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.TypedDelta.ExpectedClrType">
            <summary>
            Gets the expected type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedDelta.IsDeltaOfT(System.Type)">
            <summary>
            Helper method to check whether the given type is Delta generic type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if it is a Delta generic type; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmComplexObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmComplexObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmComplexTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmComplexObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmEntityObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmEntityObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmEntityTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmEntityObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.IEdmStructuredObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject.Instance">
            <summary>
            Gets the backing CLR object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject.Model">
            <summary>
            Gets the EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatting.Value.TypedEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
    </members>
</doc>
